"use strict";(self.webpackChunkidfive_docs=self.webpackChunkidfive_docs||[]).push([[9920],{470:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"back-end/drupal/drupal-updates","title":"Drupal Updates","description":"Core Updates","source":"@site/docs/back-end/drupal/drupal-updates.md","sourceDirName":"back-end/drupal","slug":"/back-end/drupal/drupal-updates","permalink":"/docs/back-end/drupal/drupal-updates","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/back-end/drupal/drupal-updates.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Testing in drupal","permalink":"/docs/back-end/drupal/drupal-testing"},"next":{"title":"Drupal Users and Roles","permalink":"/docs/back-end/drupal/drupal-users-roles"}}');var i=n(4848),a=n(8453);const o={},t="Drupal Updates",d={},l=[{value:"Core Updates",id:"core-updates",level:2},{value:"Sample core update workflow",id:"sample-core-update-workflow",level:3},{value:"General things to look at when performing core updates",id:"general-things-to-look-at-when-performing-core-updates",level:3},{value:"Scaffolding tips for core composer.json, for easier updates",id:"scaffolding-tips-for-core-composerjson-for-easier-updates",level:3},{value:"Exclude .htaccess changes",id:"exclude-htaccess-changes",level:4},{value:"Contrib Updates",id:"contrib-updates",level:2},{value:"Sample contrib update workflow",id:"sample-contrib-update-workflow",level:3},{value:"General things to look at when performing contrib updates",id:"general-things-to-look-at-when-performing-contrib-updates",level:3},{value:"A @sites alias replacement for drush 9 and above",id:"a-sites-alias-replacement-for-drush-9-and-above",level:2},{value:"Example script on a server, scripts/idfive_sites.sh",id:"example-script-on-a-server-scriptsidfive_sitessh",level:3},{value:"Usage of idfive_sites.sh directly",id:"usage-of-idfive_sitessh-directly",level:3},{value:"Usage of idfive_sites.sh from a scripting library",id:"usage-of-idfive_sitessh-from-a-scripting-library",level:3}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"drupal-updates",children:"Drupal Updates"})}),"\n",(0,i.jsx)(s.h2,{id:"core-updates",children:"Core Updates"}),"\n",(0,i.jsxs)(s.p,{children:["Core updates are to be enacted with composer. Though some scaffolding systems may vary, ",(0,i.jsx)(s.code,{children:"composer update drupal/core --with-dependencies"})," is normally what is called for."]}),"\n",(0,i.jsx)(s.h3,{id:"sample-core-update-workflow",children:"Sample core update workflow"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Backup Database/etc as needed."}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:'composer outdated "drupal/*"'})," Shows if core/contrib is out of date."]}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"composer update drupal/core --with-dependencies"})}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"drush updb"})," Update local DB, if required."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"drush cr"})," Clear caches."]}),"\n",(0,i.jsx)(s.li,{children:"Test locally"}),"\n",(0,i.jsxs)(s.li,{children:["If using config sync, run ",(0,i.jsx)(s.code,{children:"drush cex sync"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Commit, deploy, test on dev/stg/prod, as needed, per client specs."}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"general-things-to-look-at-when-performing-core-updates",children:"General things to look at when performing core updates"}),"\n",(0,i.jsx)(s.p,{children:"In general, minor core updates are usually not an issue. Most often, these are changes to underlying libraries like Symphony, or security updates, or bug fixes to existing functionality."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Look at your composer.json. Are their any patches active for core? Do they still apply?"}),"\n",(0,i.jsx)(s.li,{children:"Look at the release notes for the new core version. Any red flags? Any open issues?"}),"\n",(0,i.jsx)(s.li,{children:"Do the release notes mention changes to specific functionality? If so, flag for testing."}),"\n",(0,i.jsx)(s.li,{children:"Does the new release require updates to the database?"}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"scaffolding-tips-for-core-composerjson-for-easier-updates",children:"Scaffolding tips for core composer.json, for easier updates"}),"\n",(0,i.jsx)(s.h4,{id:"exclude-htaccess-changes",children:"Exclude .htaccess changes"}),"\n",(0,i.jsx)(s.p,{children:"The following, when added to to the core scaffold, ignores .htaccess changes, where we often store global redirects/etc."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'"extra": {\n  "drupal-scaffold": {\n    "file-mapping": {\n      "[web-root]/.htaccess": false\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(s.h2,{id:"contrib-updates",children:"Contrib Updates"}),"\n",(0,i.jsxs)(s.p,{children:["Contrib updates are to be enacted with composer. Though some scaffolding systems may vary, ",(0,i.jsx)(s.code,{children:"composer update drupal/MODULE_NAME --with-dependencies"})," is normally what is called for."]}),"\n",(0,i.jsx)(s.h3,{id:"sample-contrib-update-workflow",children:"Sample contrib update workflow"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Backup Database/etc as needed."}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:'composer outdated "drupal/*"'})," Shows if core/contrib is out of date."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"composer update drupal/* --with-dependencies"})," Will update all (including core if it needs it)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"composer update drupal/MODULE_NAME"})," will do a specific module."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"drush updb"})," Update local DB, if required."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"drush cr"})," Clear caches."]}),"\n",(0,i.jsx)(s.li,{children:"Test locally"}),"\n",(0,i.jsxs)(s.li,{children:["If using config sync, run ",(0,i.jsx)(s.code,{children:"drush cex sync"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Commit, deploy, test on dev/stg/prod, as needed, per client specs."}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"general-things-to-look-at-when-performing-contrib-updates",children:"General things to look at when performing contrib updates"}),"\n",(0,i.jsx)(s.p,{children:'In general, contrib updates are "less trustworthy" than core updates. They are sometimes best done, and tested one at a time for significant updates, especially if jumping several versions, or major versions.'}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Is this a minor, or major update?"}),"\n",(0,i.jsx)(s.li,{children:"If major, any release notes regarding an upgrade path?"}),"\n",(0,i.jsx)(s.li,{children:"Does this module rely on any libraries that also need updating?"}),"\n",(0,i.jsx)(s.li,{children:"Does this have any conflicts with current core version. (shouldn't, if done via composer)"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"a-sites-alias-replacement-for-drush-9-and-above",children:"A @sites alias replacement for drush 9 and above"}),"\n",(0,i.jsxs)(s.p,{children:["Since drush 9 and above does away with the @sites alias, we needed to create a script on the server that essentially loops through all sites on a multi-site install, and runs drush commands/etc. This script is located in each codebase, under ",(0,i.jsx)(s.code,{children:"scripts/idfive_sites.sh"}),". It is interacted with, both through command line/etc, and via CRON scheduled jobs on acquia/similar. For scheduled jobs, see the ",(0,i.jsx)(s.a,{href:"https://docs.acquia.com/cloud-platform/manage/cron/#cloud-execute-shell-script",children:"acquia documentation"}),". At its essence, it provides a way to run the same drush command on all multi-sites within an environment."]}),"\n",(0,i.jsx)(s.p,{children:"Note below scripts run on acquia:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Therefore use one of their vars, ",(0,i.jsx)(s.code,{children:"${AH_SITE_NAME}"}),", which would need to be modified if used elesewhere."]}),"\n",(0,i.jsxs)(s.li,{children:["includes ",(0,i.jsx)(s.code,{children:'awk \'{print "["strftime("\\%Y-\\%m-\\%d \\%H:\\%M:\\%S \\%Z")"] "$0}\' &>> /var/log/sites/${AH_SITE_NAME}/logs/$(hostname -s)/drush-cron.log'})," only because acquia requires logging for scripts. This can easily be removed elsewhere."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"example-script-on-a-server-scriptsidfive_sitessh",children:"Example script on a server, scripts/idfive_sites.sh"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sh",children:'  #!/bin/bash\n\n  # Provide the absolute path to the sites directory.\n  SITES="/var/www/html/${AH_SITE_NAME}/docroot/sites"\n\n  # Validate and hint if no argument provided.\n  if [ "${#}" -eq 0 ]; then\n    echo "drush: missing argument(s). Please add the drush command you wish to run on all sites."\n    echo "The \'drush\' will be added automatically, please only add the actual command desired. EXAMPLE: cex -y"\n  else\n    cd "${SITES}"\n    # Loop:\n    for SITE in $(ls -d */ | cut -f1 -d\'/\'); do\n      # Skip default sites, only run for howard url\'s.\n      if [[ "${SITE}" == *".howard.edu"* ]]; then\n        echo "======================================"\n        echo "Running command: drush -l ${SITE} ${@} -y"\n        echo "======================================"\n        drush -l "${SITE}" "${@}" -y | awk \'{print "["strftime("\\%Y-\\%m-\\%d \\%H:\\%M:\\%S \\%Z")"] "$0}\' &>> /var/log/sites/${AH_SITE_NAME}/logs/$(hostname -s)/drush-cron.log\n      fi\n    done\n  fi\n'})}),"\n",(0,i.jsx)(s.h3,{id:"usage-of-idfive_sitessh-directly",children:"Usage of idfive_sites.sh directly"}),"\n",(0,i.jsxs)(s.p,{children:["When running this script, 'drush' and the '-y' flag, are automatically added to the drush command you wish to run. It is quite important to \"not use command aliases\" with this script. Ie, use \"pm",":enable",'" not "en". Related too ',(0,i.jsx)(s.a,{href:"https://github.com/drush-ops/drush/issues/3025",children:"this issue"})," if curious as to why."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["From root folder on acquia server, check status: ",(0,i.jsx)(s.code,{children:"bash scripts/idfive_sites.sh status"}),". In this instance, 'status' is the drush command to run."]}),"\n",(0,i.jsxs)(s.li,{children:["From root folder on acquia server, clear cache: ",(0,i.jsx)(s.code,{children:"bash scripts/idfive_sites.sh cr"}),". In this instance, 'cr' is the drush command to run."]}),"\n",(0,i.jsxs)(s.li,{children:["From scheduled task runner on acquia: ",(0,i.jsx)(s.code,{children:"bash /var/www/html/${AH_SITE_NAME}/scripts/idfive_sites.sh cr"}),". Clears caches on all sites in install, to run hourly or whatever desired."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"usage-of-idfive_sitessh-from-a-scripting-library",children:"Usage of idfive_sites.sh from a scripting library"}),"\n",(0,i.jsxs)(s.p,{children:["An example local script from the ",(0,i.jsx)(s.a,{href:"https://github.com/howard-university-web-services/Howard-Automation-Library",children:"Howard Automation Library"}),", to interact with a few acquia multisites, and run drush commands for each:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sh",children:'#!/bin/bash\n#\n# Update specific config on all howard D8 Sites.\n#\n# $ sh ~/Sites/_hal/drupal/acquia/update_via_drush.sh\n#\n# Notes:\n# - See README.md for detailed instructions.\n# - Allows drush commands to be run on all sites and environments.\n#\n# Dependencies:\n# - drush\n#\n# Parameters:\n# - Drush command | ie, pm-uninstall page_cache\n#\n\necho "Updating custom config for Howard D8 sites."\n\nsource ~/Sites/_hal/hal_config.txt\n\n# Choose acquia env for drush aliases\necho "Please choose which acquia env to run this on:"\nENVS=(".dev.dev" ".test.test" ".prod.prod")\nselect ENV in "${ENVS[@]}"\ndo\n  echo "$ENV selected"\n  break\ndone\n\n# Config Name, use as $DRUSH_COMMAND\necho "Enter the drush command. (e.g. pm:enable page_cache):"\nread DRUSH_COMMAND\n\n# Check Config Name is not empty\nif [ -z "$DRUSH_COMMAND" ]; then\n  echo "The drush command cannot be empty!"\n  exit 2\nfi\n\n# Foreach drush alias, go on the server and set.\nfor APP in ${LOCAL_HOWARD_D8_DRUSH_ALIAS[@]}; do\n  echo "Running config updates for $APP$ENV"\n  drush $APP$ENV ssh "bash /var/www/html/"\\${AH_SITE_NAME}"/scripts/hal_sites.sh $DRUSH_COMMAND"\ndone\n\necho "drush updates complete on $APP$ENV."\n\nexit 0\n'})})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>t});var r=n(6540);const i={},a=r.createContext(i);function o(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);