"use strict";(self.webpackChunkidfive_docs=self.webpackChunkidfive_docs||[]).push([[3863],{3253:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"back-end/drupal/drupal-simple-password-protection","title":"Simple (per page) password protection in drupal","description":"Often, we get requests for simple passwords per node, to limit access. As of the time of writing, no simple solution existed, to allow passwords on a per-node basis. This is a per entity feature, at it\'s simplest form. This could be adapted to multiple entities/etc however, and also set things like cookies/etc in the future, if needed.","source":"@site/docs/back-end/drupal/drupal-simple-password-protection.md","sourceDirName":"back-end/drupal","slug":"/back-end/drupal/drupal-simple-password-protection","permalink":"/docs/back-end/drupal/drupal-simple-password-protection","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/back-end/drupal/drupal-simple-password-protection.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Seven to 9 migration locally via lando","permalink":"/docs/back-end/drupal/drupal-seven-migration"},"next":{"title":"Simplesamlphp (per page) password protection in drupal","permalink":"/docs/back-end/drupal/drupal-simplesamlphp-password-protection"}}');var i=s(4848),o=s(8453);const r={},a="Simple (per page) password protection in drupal",d={},l=[{value:"To enact",id:"to-enact",level:2},{value:"Preproccess the entity",id:"preproccess-the-entity",level:3},{value:"The entity twig template",id:"the-entity-twig-template",level:3}];function p(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"simple-per-page-password-protection-in-drupal",children:"Simple (per page) password protection in drupal"})}),"\n",(0,i.jsx)(t.p,{children:"Often, we get requests for simple passwords per node, to limit access. As of the time of writing, no simple solution existed, to allow passwords on a per-node basis. This is a per entity feature, at it's simplest form. This could be adapted to multiple entities/etc however, and also set things like cookies/etc in the future, if needed."}),"\n",(0,i.jsx)(t.h2,{id:"to-enact",children:"To enact"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Set a text field on entity to hold the password entered by an admin."}),"\n",(0,i.jsx)(t.li,{children:"Adjust preproccess to check access, including things like role and if password set."}),"\n",(0,i.jsx)(t.li,{children:"Adjust twig template to display content if access granted, display password form if not."}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"preproccess-the-entity",children:"Preproccess the entity"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-php",children:"/**\n * Implements hook_preprocess_HOOK() for page templates.\n *\n * @param $variables\n */\nfunction MY_MODULE_preprocess_node(&$variables) {\n  $node = $variables['elements']['#node'];\n  $view_mode = $variables['view_mode'];\n  $bundle = $node->bundle();\n  if ($bundle == 'MY_BUNDLE') {\n    if ($view_mode == 'full') {\n      $variables['view_access'] = _MY_MODULE_test_node_access($node);\n    }\n  }\n}\n\n/**\n * Simple custom function to check node access.\n */\nfunction _MY_MODULE_test_node_access($node) {\n  $view_access = TRUE;\n  $password = $node->MY_PASSWORD_TEXT_FIELD->value;\n  // If password is not set, assume no access restrictions.\n  if (isset($password)) {\n    // Do not require password for authenticated users.\n    if (\\Drupal::currentUser()->isAnonymous()) {\n      $password_entered = \\Drupal::request()->request->get('password');\n      if($password !== $password_entered) {\n        $view_access = FALSE;\n      }\n    }\n  }\n  return $view_access;\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"the-entity-twig-template",children:"The entity twig template"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Add an if/else to the entity twig template in order to show/hide general content."}),"\n",(0,i.jsx)(t.li,{children:"If denied, provide simple form, that submits to same page, so we can get the post variable in the preproccess on reload."}),"\n",(0,i.jsxs)(t.li,{children:["Note the ",(0,i.jsx)(t.code,{children:"{{ url }}"})," variable (should be in ICL theme), to resubmit form to the same page."]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-twig",children:'{% if view_access %}\n  {# Content Here #}\n{% else %}\n  <h1>Not Authorized</h1>\n  <p>Please submit the password you were provided with.</p>\n  <form action="{{ url }}" method="POST" accept-charset="utf-8" class="form-inline">\n    <input type="password" name="password" value="">\n    <button type="submit">Submit</button>\n  </form>\n{% endif %}\n'})})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var n=s(6540);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);