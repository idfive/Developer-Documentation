"use strict";(self.webpackChunkidfive_docs=self.webpackChunkidfive_docs||[]).push([[6642],{8114:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"back-end/drupal/drupal-entity-queries","title":"Entity queries in drupal","description":"Sometimes, rather than use view modes, it is desireable to load local content into a variable, for further data manipulation, or to simply get better markup, for a quick for loop in twig. This is easily accomplished via entity queries.","source":"@site/docs/back-end/drupal/drupal-entity-queries.md","sourceDirName":"back-end/drupal","slug":"/back-end/drupal/drupal-entity-queries","permalink":"/docs/back-end/drupal/drupal-entity-queries","draft":false,"unlisted":false,"editUrl":"https://github.com/idfive/Developer-Documentation/tree/main/docs/back-end/drupal/drupal-entity-queries.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Entities","permalink":"/docs/back-end/drupal/drupal-entities"},"next":{"title":"idfive drupal environment and common setup","permalink":"/docs/back-end/drupal/drupal-environment"}}');var r=i(4848),a=i(8453);const o={},s="Entity queries in drupal",l={},d=[{value:"Simple example",id:"simple-example",level:2},{value:"Complex example",id:"complex-example",level:2},{value:"Helpful entity query conditions/sorts/etc",id:"helpful-entity-query-conditionssortsetc",level:2},{value:"Entities",id:"entities",level:3},{value:"Node",id:"node",level:4},{value:"Paragraph",id:"paragraph",level:4},{value:"Taxonomy Term",id:"taxonomy-term",level:4},{value:"Sort",id:"sort",level:3},{value:"Conditions",id:"conditions",level:3},{value:"Conditions groups",id:"conditions-groups",level:4}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"entity-queries-in-drupal",children:"Entity queries in drupal"})}),"\n",(0,r.jsxs)(n.p,{children:["Sometimes, rather than use view modes, it is desireable to load local content into a variable, for further data manipulation, or to simply get better markup, for a quick for loop in twig. This is easily accomplished via ",(0,r.jsx)(n.a,{href:"https://api.drupal.org/api/drupal/core%21lib%21Drupal.php/function/Drupal%3A%3AentityQuery/8.6.x",children:"entity queries"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"simple-example",children:"Simple example"}),"\n",(0,r.jsx)(n.p,{children:'Get all nodes of a type, that have a reference field to TID "52":'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$query = \\Drupal::entityQuery('node')\n  ->condition('type', 'NODE_MACHINE_NAME'),\n  ->condition('FIELD_TAXONOMY_REFERENCE', 52)\n$nids = $query->execute();\n$results = $node_storage->loadMultiple($nids);\nforeach ($results as $node) {\n  // Do whatever you want here, with each loaded $node.\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"complex-example",children:"Complex example"}),"\n",(0,r.jsxs)(n.p,{children:["Example function, with caching, to be called via custom service. See ",(0,r.jsx)(n.a,{href:"/docs/back-end/drupal/drupal-services",children:"drupal Services"})," for more details on services:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"/**\n   * Public method to get local nodes of NODE_MACHINE_NAME.\n   */\n  public function getStuff($id = NULL, $limit = 3) {\n    if ($id == NULL) {\n      $cid = 'MY_MODULE:local_NODE_MACHINE_NAME_all-' . $limit;\n    }\n    else {\n      $cid = 'MY_MODULE:local_NODE_MACHINE_NAME_' . $id . '-' . $limit;\n    }\n    if ($cache = \\Drupal::cache()->get($cid)) {\n      return $cache->data;\n    }\n    else {\n      $storage = \\Drupal::getContainer()->get('entity_type.manager')->getStorage('node');\n      $query = $storage->getQuery();\n      $query = $query->condition('type', 'NODE_MACHINE_NAME')\n        ->condition('status', 1)\n        ->sort('created', 'DESC');\n      $nids = $query->execute();\n      $results = $storage->loadMultiple($nids);\n      if ($results) {\n        $parsed_results = [];\n        foreach ($results as $key => $result) {\n          $parsed_results[$key]['title'] = $result->title->value;\n          $parsed_results[$key]['url'] = $result->toUrl()->toString();\n          $parsed_results[$key]['publication_date'] = $result->getCreatedTime();\n        }\n        \\Drupal::cache()->set($cid, $parsed_results, time() + 7200);\n        return $parsed_results;\n      }\n      else {\n        return NULL;\n      }\n    }\n  }\n"})}),"\n",(0,r.jsx)(n.p,{children:"You would then call via the following in a hook or controller of your choice:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$stuffService = \\Drupal::service('MY_CUSTOM_SERVICE');\n$stuff = $stuffService->getStuff('home', 3);\n$variables['my_stuff'] = $stuff;\n"})}),"\n",(0,r.jsx)(n.p,{children:"and then in the twig template:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-twig",children:"{% for stuff in my_stuff %}\n  {{ stuff.url }}\n  {{ stuff.publication_date|date('Y-m-d') }}\n  {{ story.title }}\n{% endfor %}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"helpful-entity-query-conditionssortsetc",children:"Helpful entity query conditions/sorts/etc"}),"\n",(0,r.jsx)(n.h3,{id:"entities",children:"Entities"}),"\n",(0,r.jsx)(n.h4,{id:"node",children:"Node"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$nids = \\Drupal::entityQuery('node')\n  ->condition('type', 'NODE_MACHINE_NAME')\n  ->execute();\n"})}),"\n",(0,r.jsx)(n.h4,{id:"paragraph",children:"Paragraph"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$pids = \\Drupal::entityQuery('paragraph')\n  ->condition('type', 'PARAGRAPH_MACHINE_NAME')\n  ->execute();\n"})}),"\n",(0,r.jsx)(n.h4,{id:"taxonomy-term",children:"Taxonomy Term"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$tids = \\Drupal::entityQuery('taxonomy_term')\n  ->condition('vid','VOCABULARY_MACHINE_NAME')\n  ->execute();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"sort",children:"Sort"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"->sort('created', 'DESC') // The newest created entities first\n->sort('title', 'DESC') // DESC, by node title\n"})}),"\n",(0,r.jsx)(n.h3,{id:"conditions",children:"Conditions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"->condition('status', 1) // Entity is published\n->condition('type', 'NODE_MACHINE_NAME') // Entity is of type\n->condition('FIELD_TAXONOMY_REFERENCE', $tid); // A taxonomy reference field is equal to $tid (NUM)\n->condition('FIELD_TAXONOMY_REFERENCE', [$tids], 'IN'); // A taxonomy reference field is equal to one of several $tids (NUM, comma separated)\n->condition('nid', $nid, 'NOT IN'); // Exclude a node, by ID\n->condition('FIELD_PARAGRAPH_REFERENCE.entity:paragraph.FIELD_TAXONOMY_REFERENCE.target_id', $tid); //A taxonomy reference on a referenced paragraph\n"})}),"\n",(0,r.jsx)(n.h4,{id:"conditions-groups",children:"Conditions groups"}),"\n",(0,r.jsx)(n.p,{children:"Conditions groups can be further added in order to adjust the conditions queries."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"AND: andConditionGroup()"}),"\n",(0,r.jsx)(n.li,{children:"OR: orConditionGroup()"}),"\n",(0,r.jsxs)(n.li,{children:["See more in ",(0,r.jsx)(n.a,{href:"https://www.drupal.org/docs/8/api/database-api/dynamic-queries/conditions#s-condition-groups",children:"drupal.org docs"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$and = $query->andConditionGroup();\n$and->condition('FIELD_TAXONOMY_ONE_REFERENCE', [TID], 'IN');\n$and->condition('FIELD_TAXONOMY_TWO_REFERENCE', [TID], 'IN');\n$query->condition($and);\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>s});var t=i(6540);const r={},a=t.createContext(r);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);