"use strict";(self.webpackChunkidfive_docs=self.webpackChunkidfive_docs||[]).push([[1631],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(u,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4266:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={},o="Entity queries in drupal",l={unversionedId:"back-end/drupal/drupal-entity-queries",id:"back-end/drupal/drupal-entity-queries",title:"Entity queries in drupal",description:"Sometimes, rather than use view modes, it is desireable to load local content into a variable, for further data manipulation, or to simply get better markup, for a quick for loop in twig. This is easily accomplished via entity queries.",source:"@site/docs/back-end/drupal/drupal-entity-queries.md",sourceDirName:"back-end/drupal",slug:"/back-end/drupal/drupal-entity-queries",permalink:"/docs/back-end/drupal/drupal-entity-queries",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/back-end/drupal/drupal-entity-queries.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Entities",permalink:"/docs/back-end/drupal/drupal-entities"},next:{title:"idfive drupal environment and common setup",permalink:"/docs/back-end/drupal/drupal-environment"}},u={},s=[{value:"Simple example",id:"simple-example",level:2},{value:"Complex example",id:"complex-example",level:2},{value:"Helpful entity query conditions/sorts/etc",id:"helpful-entity-query-conditionssortsetc",level:2},{value:"Entities",id:"entities",level:3},{value:"Node",id:"node",level:4},{value:"Paragraph",id:"paragraph",level:4},{value:"Taxonomy Term",id:"taxonomy-term",level:4},{value:"Sort",id:"sort",level:3},{value:"Conditions",id:"conditions",level:3},{value:"Conditions groups",id:"conditions-groups",level:4}],p={toc:s},d="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"entity-queries-in-drupal"},"Entity queries in drupal"),(0,a.kt)("p",null,"Sometimes, rather than use view modes, it is desireable to load local content into a variable, for further data manipulation, or to simply get better markup, for a quick for loop in twig. This is easily accomplished via ",(0,a.kt)("a",{parentName:"p",href:"https://api.drupal.org/api/drupal/core%21lib%21Drupal.php/function/Drupal%3A%3AentityQuery/8.6.x"},"entity queries"),"."),(0,a.kt)("h2",{id:"simple-example"},"Simple example"),(0,a.kt)("p",null,'Get all nodes of a type, that have a reference field to TID "52":'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"$query = \\Drupal::entityQuery('node')\n  ->condition('type', 'NODE_MACHINE_NAME'),\n  ->condition('FIELD_TAXONOMY_REFERENCE', 52)\n$nids = $query->execute();\n$results = $node_storage->loadMultiple($nids);\nforeach ($results as $node) {\n  // Do whatever you want here, with each loaded $node.\n}\n")),(0,a.kt)("h2",{id:"complex-example"},"Complex example"),(0,a.kt)("p",null,"Example function, with caching, to be called via custom service. See ",(0,a.kt)("a",{parentName:"p",href:"/docs/back-end/drupal/drupal-services"},"drupal Services")," for more details on services:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"/**\n   * Public method to get local nodes of NODE_MACHINE_NAME.\n   */\n  public function getStuff($id = NULL, $limit = 3) {\n    if ($id == NULL) {\n      $cid = 'MY_MODULE:local_NODE_MACHINE_NAME_all-' . $limit;\n    }\n    else {\n      $cid = 'MY_MODULE:local_NODE_MACHINE_NAME_' . $id . '-' . $limit;\n    }\n    if ($cache = \\Drupal::cache()->get($cid)) {\n      return $cache->data;\n    }\n    else {\n      $storage = \\Drupal::getContainer()->get('entity_type.manager')->getStorage('node');\n      $query = $storage->getQuery();\n      $query = $query->condition('type', 'NODE_MACHINE_NAME')\n        ->condition('status', 1)\n        ->sort('created', 'DESC');\n      $nids = $query->execute();\n      $results = $storage->loadMultiple($nids);\n      if ($results) {\n        $parsed_results = [];\n        foreach ($results as $key => $result) {\n          $parsed_results[$key]['title'] = $result->title->value;\n          $parsed_results[$key]['url'] = $result->toUrl()->toString();\n          $parsed_results[$key]['publication_date'] = $result->getCreatedTime();\n        }\n        \\Drupal::cache()->set($cid, $parsed_results, time() + 7200);\n        return $parsed_results;\n      }\n      else {\n        return NULL;\n      }\n    }\n  }\n")),(0,a.kt)("p",null,"You would then call via the following in a hook or controller of your choice:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"$stuffService = \\Drupal::service('MY_CUSTOM_SERVICE');\n$stuff = $stuffService->getStuff('home', 3);\n$variables['my_stuff'] = $stuff;\n")),(0,a.kt)("p",null,"and then in the twig template:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-twig"},"{% for stuff in my_stuff %}\n  {{ stuff.url }}\n  {{ stuff.publication_date|date('Y-m-d') }}\n  {{ story.title }}\n{% endfor %}\n")),(0,a.kt)("h2",{id:"helpful-entity-query-conditionssortsetc"},"Helpful entity query conditions/sorts/etc"),(0,a.kt)("h3",{id:"entities"},"Entities"),(0,a.kt)("h4",{id:"node"},"Node"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"$nids = \\Drupal::entityQuery('node')\n  ->condition('type', 'NODE_MACHINE_NAME')\n  ->execute();\n")),(0,a.kt)("h4",{id:"paragraph"},"Paragraph"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"$pids = \\Drupal::entityQuery('paragraph')\n  ->condition('type', 'PARAGRAPH_MACHINE_NAME')\n  ->execute();\n")),(0,a.kt)("h4",{id:"taxonomy-term"},"Taxonomy Term"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"$tids = \\Drupal::entityQuery('taxonomy_term')\n  ->condition('vid','VOCABULARY_MACHINE_NAME')\n  ->execute();\n")),(0,a.kt)("h3",{id:"sort"},"Sort"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"->sort('created', 'DESC') // The newest created entities first\n->sort('title', 'DESC') // DESC, by node title\n")),(0,a.kt)("h3",{id:"conditions"},"Conditions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"->condition('status', 1) // Entity is published\n->condition('type', 'NODE_MACHINE_NAME') // Entity is of type\n->condition('FIELD_TAXONOMY_REFERENCE', $tid); // A taxonomy reference field is equal to $tid (NUM)\n->condition('FIELD_TAXONOMY_REFERENCE', [$tids], 'IN'); // A taxonomy reference field is equal to one of several $tids (NUM, comma separated)\n->condition('nid', $nid, 'NOT IN'); // Exclude a node, by ID\n->condition('FIELD_PARAGRAPH_REFERENCE.entity:paragraph.FIELD_TAXONOMY_REFERENCE.target_id', $tid); //A taxonomy reference on a referenced paragraph\n")),(0,a.kt)("h4",{id:"conditions-groups"},"Conditions groups"),(0,a.kt)("p",null,"Conditions groups can be further added in order to adjust the conditions queries."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"AND: andConditionGroup()"),(0,a.kt)("li",{parentName:"ul"},"OR: orConditionGroup()"),(0,a.kt)("li",{parentName:"ul"},"See more in ",(0,a.kt)("a",{parentName:"li",href:"https://www.drupal.org/docs/8/api/database-api/dynamic-queries/conditions#s-condition-groups"},"drupal.org docs"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"$and = $query->andConditionGroup();\n$and->condition('FIELD_TAXONOMY_ONE_REFERENCE', [TID], 'IN');\n$and->condition('FIELD_TAXONOMY_TWO_REFERENCE', [TID], 'IN');\n$query->condition($and);\n")))}c.isMDXComponent=!0}}]);