"use strict";(self.webpackChunkidfive_docs=self.webpackChunkidfive_docs||[]).push([[9511],{4883:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"back-end/drupal/drupal-field-snippets","title":"Drupal Field Snippets","description":"Helpful snippets for displaying different fields.","source":"@site/docs/back-end/drupal/drupal-field-snippets.md","sourceDirName":"back-end/drupal","slug":"/back-end/drupal/drupal-field-snippets","permalink":"/docs/back-end/drupal/drupal-field-snippets","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/back-end/drupal/drupal-field-snippets.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Feeds module","permalink":"/docs/back-end/drupal/drupal-feeds"},"next":{"title":"Helpful Drupal Commands","permalink":"/docs/back-end/drupal/drupal-helpfull-commands"}}');var a=n(4848),l=n(8453);const s={},d="Drupal Field Snippets",r={},o=[{value:"Dates",id:"dates",level:2},{value:"Format date in preproccess",id:"format-date-in-preproccess",level:3},{value:"Truncate",id:"truncate",level:2},{value:"Hiding fields/sections/whatever using a boolean field",id:"hiding-fieldssectionswhatever-using-a-boolean-field",level:2},{value:"Classes in twig based on a boolean field",id:"classes-in-twig-based-on-a-boolean-field",level:2},{value:"Term Reference",id:"term-reference",level:2},{value:"Comma separated fancy, in node.html.twig",id:"comma-separated-fancy-in-nodehtmltwig",level:3},{value:"Link",id:"link",level:2},{value:"With attributes, in node.html.twig",id:"with-attributes-in-nodehtmltwig",level:3},{value:"Media and Image fields",id:"media-and-image-fields",level:2},{value:"Media field in twig",id:"media-field-in-twig",level:3},{value:"Media Field preproccess.",id:"media-field-preproccess",level:3},{value:"Image field",id:"image-field",level:3}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"drupal-field-snippets",children:"Drupal Field Snippets"})}),"\n",(0,a.jsx)(i.p,{children:"Helpful snippets for displaying different fields."}),"\n",(0,a.jsx)(i.h2,{id:"dates",children:"Dates"}),"\n",(0,a.jsx)(i.h3,{id:"format-date-in-preproccess",children:"Format date in preproccess"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-php",children:"$variables['created'] = \\Drupal::service('date.formatter')->format($variables['node']->getCreatedTime(), 'MY_DATE_FORMAT');\n"})}),"\n",(0,a.jsx)(i.h2,{id:"truncate",children:"Truncate"}),"\n",(0,a.jsxs)(i.p,{children:["Use the built in ",(0,a.jsx)(i.a,{href:"https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Component%21Utility%21Unicode.php/function/Unicode%3A%3Atruncate/8.2.x",children:"Unicode truncate function"}),"."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-php",children:"use Drupal\\Component\\Utility\\Unicode;\n\n// Truncates a UTF-8-encoded string safely to a number of characters.\n$truncate = Unicode::truncate($string, $max_length, $wordsafe, $add_ellipsis, $min_wordsafe_length);\n\n$truncate = Unicode::truncate($MY_STRING, 200, TRUE, TRUE, 5);\n"})}),"\n",(0,a.jsx)(i.h2,{id:"hiding-fieldssectionswhatever-using-a-boolean-field",children:"Hiding fields/sections/whatever using a boolean field"}),"\n",(0,a.jsx)(i.p,{children:'Sometimes it in necessary to use a boolean to hide/show different parts of a page. This can be accomplished by adding a field check in the proper entity hook (node/paragraph/whatever), and creating a custom variable. In this example we added a boolean that says "Hide something" to a node. In general, we prefer to say "hide something", rather than "show something", that way, all things can be displayed by default, and the feeling is more "this one instance is special and I am taking action to do something unique".'}),"\n",(0,a.jsx)(i.p,{children:"In hook_preprocess_node:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-php",children:"$hide_this_thing_chosen = $variables['elements']['#node']->BOOLEAN_FIELD_ON_NODE_TO_CONTROL_HIDING->value;\n$hide_this_thing = FALSE;\nif ($hide_this_thing_chosen == TRUE) {\n  $hide_this_thing = TRUE;\n}\n$variables['hide_this_thing'] = $hide_this_thing;\n"})}),"\n",(0,a.jsx)(i.p,{children:"Then in twig template:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-twig",children:"{% if not hide_this_thing %}\n  Conditional code/etc here...\n{% endif %}\n"})}),"\n",(0,a.jsx)(i.h2,{id:"classes-in-twig-based-on-a-boolean-field",children:"Classes in twig based on a boolean field"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-twig",children:"{%\n  set classes = [\n    'paragraph',\n    'paragraph--type--' ~ paragraph.bundle|clean_class,\n    content.FIELD_MY_FIELD|render|trim == 'On' ? 'paragraph--type--' ~ paragraph.bundle|clean_class ~ '__MY_CLASS_MODIFIER',\n  ]\n%}\n{% block paragraph %}\n\n<section{{ attributes.addClass(classes) }}>\n"})}),"\n",(0,a.jsx)(i.h2,{id:"term-reference",children:"Term Reference"}),"\n",(0,a.jsx)(i.h3,{id:"comma-separated-fancy-in-nodehtmltwig",children:"Comma separated fancy, in node.html.twig"}),"\n",(0,a.jsx)(i.p,{children:"If, for whatever reason you do not wish to override a field template, links can be accessed in the entity template."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"If 1 value: My first term"}),"\n",(0,a.jsx)(i.li,{children:"If 2 values: My first term and My second term"}),"\n",(0,a.jsx)(i.li,{children:"If 3+ values: My first term, My second term, My third term and My fourth term"}),"\n"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-twig",children:"{% if content.MY_TERM_REFERENCE_FIELD %}\n  {%- for item in content.MY_TERM_REFERENCE_FIELD['#items'] -%}\n    {%- if loop.first -%}\n      {{- item.entity.name.value -}}\n    {%- elseif loop.last -%}\n      {{- ' and ' ~ item.entity.name.value -}}\n    {%- else -%}\n      {{- ', ' ~ item.entity.name.value -}}\n    {%- endif -%}\n  {%- endfor -%}\n{% endif %}\n"})}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"If 1 value: My first term"}),"\n",(0,a.jsx)(i.li,{children:"If 2 values: My first term,My second term"}),"\n",(0,a.jsx)(i.li,{children:"If 3+ values: My first term, My second term, My third term, My fourth term"}),"\n"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-twig",children:"{% if content.MY_TERM_REFERENCE_FIELD %}\n  {%- for item in content.MY_TERM_REFERENCE_FIELD['#items'] -%}\n    {%- if loop.last -%}\n      {{- item.entity.name.value -}}\n    {%- else -%}\n      {{-  item.entity.name.value ~ ', ' -}}\n    {%- endif -%}\n  {%- endfor -%}\n{% endif %}\n"})}),"\n",(0,a.jsx)(i.h2,{id:"link",children:"Link"}),"\n",(0,a.jsx)(i.h3,{id:"with-attributes-in-nodehtmltwig",children:"With attributes, in node.html.twig"}),"\n",(0,a.jsx)(i.p,{children:"If, for whatever reason you do not wish to override a field template, links can be accessed in the entity template."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:'For "Link with target" form field'}),"\n"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-twig",children:"{% if content.MY_LINK_FIELD %}\n  {% for key, item in content.MY_LINK_FIELD if key|first != '#' %}\n    <a href=\"{{ item['#url'] }}\" class=\"btn\" {% if item['#options'].attributes.target %} target=\"{{ item['#options'].attributes.target }}\" {% endif %}>\n      {{ item['#title'] }}\n    </a>\n  {% endfor %}\n{% endif %}\n"})}),"\n",(0,a.jsx)(i.p,{children:"A note on titles: It may sometimes be necessary to override the stock drupal title behavior if a default is needed to be provided. By default, if empty, it outputs the relative path as text."}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-twig",children:"{% set title = item.content['#title'] %}\n{% if item.content['#url']|render == title %}\n  {% set title = 'Read More' %}\n{% endif %}\n"})}),"\n",(0,a.jsx)(i.h2,{id:"media-and-image-fields",children:"Media and Image fields"}),"\n",(0,a.jsxs)(i.p,{children:["Examples of media and images fields being rendered within a twig template. Can be optionally passed through an image style filter. Note: the image_style filter is provided by the ",(0,a.jsx)(i.a,{href:"https://www.drupal.org/project/twig_tweak",children:"twig tweak"})," module."]}),"\n",(0,a.jsx)(i.h3,{id:"media-field-in-twig",children:"Media field in twig"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-twig",children:"<img src=\"{{ file_url(content.field_carousel_item_image[0]['#media'].field_media_image.entity.uri.value | image_style('optimized')) }}\" alt=\"{{ content.field_carousel_item_image[0]['#media'].field_media_image.alt }}\">\n"})}),"\n",(0,a.jsx)(i.h3,{id:"media-field-preproccess",children:"Media Field preproccess."}),"\n",(0,a.jsxs)(i.p,{children:["If you need an image URL, and a default image URL. Following assumes a node, and that ",(0,a.jsx)(i.code,{children:"$node"})," is set with the node entity."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-php",children:"use Drupal\\media\\Entity\\Media;\nuse Drupal\\image\\Entity\\ImageStyle;\n\n// Background image URL, with fallback.\n$variables['profile_image'] = 'YOUR_BACKUP_IMAGE_URL';\nif ($node->hasField('field_profile_image')) {\n  $profile_image = $node->get('field_profile_image')->getValue();\n  if ($profile_image && !empty($profile_image)) {\n    $entity = Media::load($profile_image[0]['target_id']);\n    if (isset($entity) && $entity->field_media_image->entity !== NULL && $entity->field_media_image->entity->getFileUri() !== NULL) {\n      $variables['profile_image'] = ImageStyle::load('DESIRED_IMAGE_STYLE')->buildUrl($entity->field_media_image->entity->getFileUri());\n    }\n  }\n}\n"})}),"\n",(0,a.jsx)(i.h3,{id:"image-field",children:"Image field"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-twig",children:"<img src=\"{{ file_url(content.field_news_feature_image|field_target_entity.uri.value | image_style('optimized')) }}\" alt=\"{{ content.field_news_feature_image['#items'].alt }}\">\n"})}),"\n",(0,a.jsx)(i.p,{children:"Handle a default image reference in a twig template. Preprocess might be cleaner here but does keep all functionality within the twig template."}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-twig",children:"{% set thumbnail = assets_path ~ '/img/icons/News_Thumbnail_Placeholder.svg' %}\n{% set thumbnail_alt = '' %}\n{% if content.field_news_image|field_value %}\n  {% set thumbnail = file_url(content.field_news_image|field_target_entity.uri.value | image_style('optimized')) %}\n  {% set thumbnail_alt = content.field_news_image['#items'].alt %}\n{% elseif content.field_news_feature_image|field_value %}\n  {% set thumbnail = file_url(content.field_news_feature_image|field_target_entity.uri.value | image_style('optimized')) %}\n  {% set thumbnail_alt = content.field_news_feature_image['#items'].alt %}\n{% endif %}\n"})})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>d});var t=n(6540);const a={},l=t.createContext(a);function s(e){const i=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(l.Provider,{value:i},e.children)}}}]);